package Poker;
//12345678901234567890123456789012345678901234567890123456789012345678901234567890

/*
 3. Create a child class of your PlayingCard class that can be used in the Poker Game
(Links to an external site.) (Links to an external site.). You will need to do a 
little research on the cards that are present in a Poker game deck. Your child class 
should have at least the following:
•	Fields: suit, rank
•	Constructors: a parameterized constructor (no default constructor allowed)
o	It should not be possible to instantiate a poker card object with invalid suits 
	or ranks (look up the valid values for both these fields)
•	Getters and setters for each field
•	An appropriate toString() method*/

// Note by using enums for suit and rank, its not possible to create invalid cards

public class PokerCard extends PlayingCard
{
	

	public PokerCard(int _color, int _width, int _height, Suit _suit, Rank _rank ) 
	{
		super(_color, _width, _height);
		this.rank = _rank;
		this.suit = _suit;
	}

	public PokerCard(Suit _suit, Rank _rank ) 
	{

		super(0, 0, 0);
		this.rank = _rank;
		this.suit = _suit;
		
		if (this.rank == Rank.Ace)
		{
			cardValue = 1;
		}
		else
		if (this.rank == Rank.Ten || this.rank == Rank.Jack || this.rank == Rank.Queen || this.rank == Rank.King)
		{
			this.cardValue  = 10;
		}
		else
		{
			this.cardValue = rank.ordinal()+1;
		}
		
		
		// this is broken and currently not used. Each card should have a
		// unique value between 1-52 or 0-51
		//this.cardNumber = (_suit.ordinal()*13) + (_rank.ordinal() +1);

	}

	private Suit suit;
	private Rank rank;
	public int cardNumber;
	public int cardValue;

	
	public int getValue() 
	{
		return cardValue;
	}
	
	public Rank getRank() 
	{
		return rank;
	}
	public void setRank(Rank rank) 
	{
		this.rank = rank;
	}
	
	public Suit getSuit() 
	{
		return suit;
	}
	
	public void setSuit(Suit suit) 
	{
		this.suit = suit;
	}


	@Override
	public String toString() 
	{
		if (this.visibility == CardVisibility.EVERYONE)
			return "Card [suit=" + suit + " rank=" + rank + "]";
		if (this.visibility == CardVisibility.FACE_DOWN)
			return "Card [Face down]";
		return "Card [suit=" + suit + " rank=" + rank + "]";
	}
	
}


